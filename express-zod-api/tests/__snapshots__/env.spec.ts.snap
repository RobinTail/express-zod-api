// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Environment checks > Zod checks/refinements > Snapshot control 'ZodEmail' definition 1`] = `
{
  "check": [Function],
  "computed": {
    "format": "email",
    "pattern": /\\^\\(\\?!\\\\\\.\\)\\(\\?!\\.\\*\\\\\\.\\\\\\.\\)\\(\\[A-Za-z0-9_'\\+\\\\-\\\\\\.\\]\\*\\)\\[A-Za-z0-9_\\+-\\]@\\(\\[A-Za-z0-9\\]\\[A-Za-z0-9\\\\-\\]\\*\\\\\\.\\)\\+\\[A-Za-z\\]\\{2,\\}\\$/,
  },
  "constr": [Function],
  "def": {
    "abort": false,
    "check": "string_format",
    "format": "email",
    "pattern": /\\^\\(\\?!\\\\\\.\\)\\(\\?!\\.\\*\\\\\\.\\\\\\.\\)\\(\\[A-Za-z0-9_'\\+\\\\-\\\\\\.\\]\\*\\)\\[A-Za-z0-9_\\+-\\]@\\(\\[A-Za-z0-9\\]\\[A-Za-z0-9\\\\-\\]\\*\\\\\\.\\)\\+\\[A-Za-z\\]\\{2,\\}\\$/,
    "type": "string",
  },
  "deferred": [],
  "onattach": [Function],
  "parse": [Function],
  "pattern": /\\^\\(\\?!\\\\\\.\\)\\(\\?!\\.\\*\\\\\\.\\\\\\.\\)\\(\\[A-Za-z0-9_'\\+\\\\-\\\\\\.\\]\\*\\)\\[A-Za-z0-9_\\+-\\]@\\(\\[A-Za-z0-9\\]\\[A-Za-z0-9\\\\-\\]\\*\\\\\\.\\)\\+\\[A-Za-z\\]\\{2,\\}\\$/,
  "run": [Function],
  "traits": Set {
    "ZodEmail",
    "$ZodEmail",
    "$ZodStringFormat",
    "$ZodCheckStringFormat",
    "$ZodCheck",
    "$ZodString",
    "$ZodType",
    "ZodType",
  },
}
`;

exports[`Environment checks > Zod checks/refinements > Snapshot control 'ZodNumber' definition 1`] = `
{
  "computed": {
    "format": "safeint",
    "maximum": 9007199254740991,
    "minimum": -9007199254740991,
    "pattern": /\\^\\\\d\\+\\$/,
  },
  "constr": [Function],
  "def": {
    "checks": [
      {
        "exclusiveMaximum": 9007199254740991,
        "exclusiveMinimum": -9007199254740991,
        "type": "integer",
      },
    ],
    "type": "number",
  },
  "deferred": [],
  "parse": [Function],
  "pattern": /\\^\\\\d\\+\\$/,
  "run": [Function],
  "traits": Set {
    "ZodNumber",
    "$ZodNumber",
    "$ZodType",
    "ZodType",
  },
}
`;

exports[`Environment checks > Zod checks/refinements > Snapshot control 'ZodNumberFormat' definition 1`] = `
{
  "check": [Function],
  "computed": {
    "format": "safeint",
    "maximum": 9007199254740991,
    "minimum": -9007199254740991,
    "pattern": /\\^\\\\d\\+\\$/,
  },
  "constr": [Function],
  "def": {
    "abort": false,
    "check": "number_format",
    "format": "safeint",
    "type": "number",
  },
  "deferred": [],
  "onattach": [Function],
  "parse": [Function],
  "pattern": /\\^\\\\d\\+\\$/,
  "run": [Function],
  "traits": Set {
    "ZodNumberFormat",
    "$ZodNumber",
    "$ZodCheckNumberFormat",
    "$ZodCheck",
    "$ZodType",
    "ZodType",
  },
}
`;

exports[`Environment checks > Zod checks/refinements > Snapshot control 'ZodNumberFormat' definition 2`] = `
{
  "check": [Function],
  "computed": {
    "format": "int32",
    "maximum": 2147483647,
    "minimum": -2147483648,
    "pattern": /\\^\\\\d\\+\\$/,
  },
  "constr": [Function],
  "def": {
    "abort": false,
    "check": "number_format",
    "format": "int32",
    "type": "number",
  },
  "deferred": [],
  "onattach": [Function],
  "parse": [Function],
  "pattern": /\\^\\\\d\\+\\$/,
  "run": [Function],
  "traits": Set {
    "ZodNumberFormat",
    "$ZodNumber",
    "$ZodCheckNumberFormat",
    "$ZodCheck",
    "$ZodType",
    "ZodType",
  },
}
`;

exports[`Environment checks > Zod checks/refinements > Snapshot control 'ZodString' definition 1`] = `
{
  "computed": {
    "format": "email",
    "pattern": /\\^\\(\\?!\\\\\\.\\)\\(\\?!\\.\\*\\\\\\.\\\\\\.\\)\\(\\[A-Za-z0-9_'\\+\\\\-\\\\\\.\\]\\*\\)\\[A-Za-z0-9_\\+-\\]@\\(\\[A-Za-z0-9\\]\\[A-Za-z0-9\\\\-\\]\\*\\\\\\.\\)\\+\\[A-Za-z\\]\\{2,\\}\\$/,
  },
  "constr": [Function],
  "def": {
    "checks": [
      {
        "format": "email",
        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
        "type": "string",
      },
    ],
    "type": "string",
  },
  "deferred": [],
  "parse": [Function],
  "pattern": /\\^\\(\\?!\\\\\\.\\)\\(\\?!\\.\\*\\\\\\.\\\\\\.\\)\\(\\[A-Za-z0-9_'\\+\\\\-\\\\\\.\\]\\*\\)\\[A-Za-z0-9_\\+-\\]@\\(\\[A-Za-z0-9\\]\\[A-Za-z0-9\\\\-\\]\\*\\\\\\.\\)\\+\\[A-Za-z\\]\\{2,\\}\\$/,
  "run": [Function],
  "traits": Set {
    "ZodString",
    "$ZodString",
    "$ZodType",
    "ZodType",
  },
}
`;
