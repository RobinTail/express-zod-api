// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`I/O Schema and related helpers > extractObjectSchema() > Feature #600: Top level refinements > should handle refined object schema 1`] = `
{
  "properties": {
    "one": {
      "type": "string",
    },
  },
  "required": [
    "one",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > extractObjectSchema() > Feature #1869: Top level transformations > should handle transformations to another object 1`] = `
{
  "properties": {
    "one": {
      "type": "string",
    },
  },
  "required": [
    "one",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > extractObjectSchema() > should pass the object schema through 1`] = `
{
  "properties": {
    "one": {
      "type": "string",
    },
  },
  "required": [
    "one",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > extractObjectSchema() > should return object schema for the intersection of object schemas 1`] = `
{
  "properties": {
    "one": {
      "type": "string",
    },
    "two": {
      "type": "number",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > extractObjectSchema() > should return object schema for the union of object schemas 1`] = `
{
  "properties": {
    "one": {
      "type": "string",
    },
    "two": {
      "type": "number",
    },
  },
  "required": [],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > extractObjectSchema() > should support ez.raw() 1`] = `
{
  "properties": {
    "raw": {
      "x-brand": "Symbol(File)",
    },
  },
  "required": [
    "raw",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Should handle no middlewares 1`] = `
{
  "properties": {
    "four": {
      "type": "boolean",
    },
  },
  "required": [
    "four",
  ],
  "type": "object",
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Should merge input object schemas 1`] = `
{
  "allOf": [
    {
      "allOf": [
        {
          "allOf": [
            {
              "properties": {
                "one": {
                  "type": "string",
                },
              },
              "required": [
                "one",
              ],
              "type": "object",
            },
            {
              "properties": {
                "two": {
                  "type": "number",
                },
              },
              "required": [
                "two",
              ],
              "type": "object",
            },
          ],
        },
        {
          "properties": {
            "three": {
              "type": "null",
            },
          },
          "required": [
            "three",
          ],
          "type": "object",
        },
      ],
    },
    {
      "properties": {
        "four": {
          "type": "boolean",
        },
      },
      "required": [
        "four",
      ],
      "type": "object",
    },
  ],
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Should merge intersection object schemas 1`] = `
{
  "allOf": [
    {
      "allOf": [
        {
          "allOf": [
            {
              "properties": {
                "one": {
                  "type": "string",
                },
              },
              "required": [
                "one",
              ],
              "type": "object",
            },
            {
              "properties": {
                "two": {
                  "type": "number",
                },
              },
              "required": [
                "two",
              ],
              "type": "object",
            },
          ],
        },
        {
          "allOf": [
            {
              "properties": {
                "three": {
                  "type": "null",
                },
              },
              "required": [
                "three",
              ],
              "type": "object",
            },
            {
              "properties": {
                "four": {
                  "type": "boolean",
                },
              },
              "required": [
                "four",
              ],
              "type": "object",
            },
          ],
        },
      ],
    },
    {
      "allOf": [
        {
          "properties": {
            "five": {
              "type": "string",
            },
          },
          "required": [
            "five",
          ],
          "type": "object",
        },
        {
          "properties": {
            "six": {
              "type": "number",
            },
          },
          "required": [
            "six",
          ],
          "type": "object",
        },
      ],
    },
  ],
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Should merge mixed object schemas 1`] = `
{
  "allOf": [
    {
      "allOf": [
        {
          "allOf": [
            {
              "properties": {
                "one": {
                  "type": "string",
                },
              },
              "required": [
                "one",
              ],
              "type": "object",
            },
            {
              "properties": {
                "two": {
                  "type": "number",
                },
              },
              "required": [
                "two",
              ],
              "type": "object",
            },
          ],
        },
        {
          "oneOf": [
            {
              "properties": {
                "three": {
                  "type": "null",
                },
              },
              "required": [
                "three",
              ],
              "type": "object",
            },
            {
              "properties": {
                "four": {
                  "type": "boolean",
                },
              },
              "required": [
                "four",
              ],
              "type": "object",
            },
          ],
        },
      ],
    },
    {
      "properties": {
        "five": {
          "type": "string",
        },
      },
      "required": [
        "five",
      ],
      "type": "object",
    },
  ],
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Should merge union object schemas 1`] = `
{
  "allOf": [
    {
      "allOf": [
        {
          "oneOf": [
            {
              "properties": {
                "one": {
                  "type": "string",
                },
              },
              "required": [
                "one",
              ],
              "type": "object",
            },
            {
              "properties": {
                "two": {
                  "type": "number",
                },
              },
              "required": [
                "two",
              ],
              "type": "object",
            },
          ],
        },
        {
          "oneOf": [
            {
              "properties": {
                "three": {
                  "type": "null",
                },
              },
              "required": [
                "three",
              ],
              "type": "object",
            },
            {
              "properties": {
                "four": {
                  "type": "boolean",
                },
              },
              "required": [
                "four",
              ],
              "type": "object",
            },
          ],
        },
      ],
    },
    {
      "oneOf": [
        {
          "properties": {
            "five": {
              "type": "string",
            },
          },
          "required": [
            "five",
          ],
          "type": "object",
        },
        {
          "properties": {
            "six": {
              "type": "number",
            },
          },
          "required": [
            "six",
          ],
          "type": "object",
        },
      ],
    },
  ],
}
`;

exports[`I/O Schema and related helpers > getFinalEndpointInputSchema() > Zod Issue #600: can not intersect object schema with passthrough and transformation 1`] = `
Error({
  "message": "Unmergable intersection. Error path: ["id"]",
})
`;
