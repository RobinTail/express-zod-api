// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`JSON Schema helpers > flattenIO() > should handle records 1`] = `
{
  "examples": [
    {
      "one": "test",
      "two": "jest",
    },
    {
      "one": "some",
      "two": "another",
    },
    {
      "four": 456,
      "three": 123,
    },
  ],
  "properties": {
    "four": {
      "type": "number",
    },
    "one": {
      "type": "string",
    },
    "three": {
      "type": "number",
    },
    "two": {
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`JSON Schema helpers > flattenIO() > should pass the object schema through 1`] = `
{
  "examples": [
    {
      "one": "test",
    },
  ],
  "properties": {
    "one": {
      "type": "string",
    },
  },
  "required": [
    "one",
  ],
  "type": "object",
}
`;

exports[`JSON Schema helpers > flattenIO() > should return object schema for the intersection of object schemas 1`] = `
{
  "examples": [
    {
      "one": "test",
      "two": "jest",
    },
  ],
  "properties": {
    "one": {
      "type": "string",
    },
    "two": {
      "type": "number",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;

exports[`JSON Schema helpers > flattenIO() > should return object schema for the union of object schemas 1`] = `
{
  "examples": [
    {
      "one": "test",
    },
    {
      "two": "jest",
    },
  ],
  "properties": {
    "one": {
      "type": "string",
    },
    "two": {
      "type": "number",
    },
  },
  "type": "object",
}
`;

exports[`JSON Schema helpers > flattenIO() > should use top level examples of the intersection 1`] = `
{
  "examples": [
    {
      "one": "test",
      "two": "jest",
    },
  ],
  "properties": {
    "one": {
      "type": "string",
    },
    "two": {
      "type": "number",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;
