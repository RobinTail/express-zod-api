// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Result helpers > ensureHttpError() > should handle Error: basic 1`] = `
InternalServerError({
  "cause": Error({
    "message": "basic",
  }),
  "message": "basic",
})
`;

exports[`Result helpers > ensureHttpError() > should handle InputValidationError: Invalid input: expected string, received number 1`] = `
BadRequestError({
  "cause": ZodError({
    "issues": [
      {
        "code": "invalid_type",
        "expected": "string",
        "message": "Invalid input: expected string, received number",
        "path": [],
      },
    ],
    "message": "[
  {
    "expected": "string",
    "code": "invalid_type",
    "path": [],
    "message": "Invalid input: expected string, received number"
  }
]",
  }),
  "message": "Invalid input: expected string, received number",
})
`;

exports[`Result helpers > ensureHttpError() > should handle NotFoundError: Not really found 1`] = `
NotFoundError({
  "message": "Not really found",
})
`;

exports[`Result helpers > ensureHttpError() > should handle OutputValidationError: Invalid input: expected string, received number 1`] = `
InternalServerError({
  "cause": ZodError({
    "issues": [
      {
        "code": "invalid_type",
        "expected": "string",
        "message": "Invalid input: expected string, received number",
        "path": [],
      },
    ],
    "message": "[
  {
    "expected": "string",
    "code": "invalid_type",
    "path": [],
    "message": "Invalid input: expected string, received number"
  }
]",
  }),
  "message": "output: Invalid input: expected string, received number",
})
`;
