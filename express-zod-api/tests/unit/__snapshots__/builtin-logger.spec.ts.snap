// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`BuiltinLogger > .child() > should create a child logger 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [96msome id[39m [32minfo[39m: Here is some message { more: [32m'information'[39m } { extra: [32m'data'[39m }",
  ],
]
`;

exports[`BuiltinLogger > .child() > should create a child logger 0 2`] = `
[
  [
    "2022-01-01T00:00:00.000Z some id info: Here is some message { more: 'information' } { extra: 'data' }",
  ],
]
`;

exports[`BuiltinLogger > .child() > should create a child logger 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [96msimple[39m [32minfo[39m: Here is some message { more: [32m'information'[39m }",
  ],
]
`;

exports[`BuiltinLogger > .child() > should create a child logger 1 2`] = `
[
  [
    "2022-01-01T00:00:00.000Z simple info: Here is some message { more: 'information' }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should create debug logger 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [34mdebug[39m: testing debug message { withColorful: [32m'output'[39m }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should create debug logger 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [32minfo[39m: testing debug message { withColorful: [32m'output'[39m }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should create debug logger 2 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [38;2;255;165;0mwarn[39m: testing debug message { withColorful: [32m'output'[39m }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should create debug logger 3 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: testing debug message { withColorful: [32m'output'[39m }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should create warn logger 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z warn: testing warn message { withMeta: true }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle array 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Array [ [32m'test'[39m ]",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle array 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Array [ [32m'test'[39m ]",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle circular references within subject 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z error: Recursive <ref *1> {
  a: [ [Circular *1] ],
  b: <ref *2> { inner: [Circular *2], obj: [Circular *1] }
}",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle circular references within subject 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z error: Recursive <ref *1> { a: [ [Circular *1] ], b: <ref *2> { inner: [Circular *2], obj: [Circular *1] } }",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle empty object meta 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Payload {}",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle empty object meta 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Payload {}",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle non-object meta 0 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Code [33m8090[39m",
  ],
]
`;

exports[`BuiltinLogger > constructor() > Should handle non-object meta 1 1`] = `
[
  [
    "2022-01-01T00:00:00.000Z [31merror[39m: Code [33m8090[39m",
  ],
]
`;
