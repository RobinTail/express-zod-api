openapi: 3.1.0
info:
  title: Example API
  version: 21.11.1
paths:
  /v1/user/{id}:
    patch:
      operationId: PatchV1UserId
      summary: Changes the user record. Example user update endpâ€¦
      description: Changes the user record. Example user update endpoint.
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: PATCH /v1/user/:id Parameter
          schema:
            type: string
            examples:
              - "12"
      requestBody:
        description: PATCH /v1/user/:id Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  minLength: 1
                  examples:
                    - 1234-5678-90
                name:
                  type: string
                  minLength: 1
                  examples:
                    - John Doe
                birthday:
                  description: YYYY-MM-DDTHH:mm:ss.sssZ
                  type: string
                  format: date-time
                  pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                  externalDocs:
                    url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  examples:
                    - 1963-04-21
              required:
                - key
                - name
                - birthday
            examples:
              example1:
                value:
                  key: 1234-5678-90
                  name: John Doe
                  birthday: 1963-04-21
      security:
        - APIKEY_1: []
          APIKEY_2: []
      responses:
        "200":
          description: PATCH /v1/user/:id Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        examples:
                          - John Doe
                      createdAt:
                        description: YYYY-MM-DDTHH:mm:ss.sssZ
                        type: string
                        format: date-time
                        externalDocs:
                          url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        examples:
                          - 2021-12-31T00:00:00.000Z
                    required:
                      - name
                      - createdAt
                    examples:
                      - name: John Doe
                        createdAt: 2021-12-31T00:00:00.000Z
                required:
                  - status
                  - data
              examples:
                example1:
                  value:
                    status: success
                    data:
                      name: John Doe
                      createdAt: 2021-12-31T00:00:00.000Z
        "400":
          description: PATCH /v1/user/:id Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    APIKEY_1:
      type: apiKey
      in: query
      name: key
      x-in-actual: body
      description: key MUST be supplied within the request body instead of query
    APIKEY_2:
      type: apiKey
      in: header
      name: token
  links: {}
  callbacks: {}
tags:
  - name: users
    description: Everything about the users
  - name: files
    description: Everything about the files processing
  - name: subscriptions
    description: Everything about the subscriptions
servers:
  - url: https://example.com
