openapi: 3.0.0
info:
  title: Example API
  version: 2.0.0-beta1
paths:
  /v1/getUser:
    get:
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                    required:
                      - id
                      - name
                required:
                  - status
                  - data
                description: GET /v1/getUser Successful response
        "400":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
                description: GET /v1/getUser Error response
      description: example user retrieval endpoint
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
            description: GET /v1/getUser parameter
  /v1/setUser:
    post:
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      timestamp:
                        type: number
                    required:
                      - name
                      - timestamp
                required:
                  - status
                  - data
                description: POST /v1/setUser Successful response
        "400":
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
                description: POST /v1/setUser Error response
      description: example user update endpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                id:
                  type: number
                name:
                  type: string
              required:
                - key
                - id
                - name
              description: POST /v1/setUser request body
  /v1/avatar:
    get:
      responses:
        "200":
          description: Successful response
          content:
            image/svg+xml:
              schema:
                type: string
                description: GET /v1/avatar Successful response
        "400":
          description: Error response
          content:
            text/plain:
              schema:
                type: string
                description: GET /v1/avatar Error response
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            description: GET /v1/avatar parameter
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
tags: []
servers:
  - url: http://example.com

