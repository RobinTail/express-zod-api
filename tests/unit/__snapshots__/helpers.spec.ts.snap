// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Helpers combineEndpointAndMiddlewareInputSchemas() Should merge input object schemas 1`] = `
Object {
  "four": ZodBoolean {
    "_def": Object {
      "typeName": "ZodBoolean",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "one": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "three": ZodNull {
    "_def": Object {
      "typeName": "ZodNull",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodNumber {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodNumber",
    },
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`Helpers combineEndpointAndMiddlewareInputSchemas() Should merge intersection object schemas 1`] = `
Object {
  "five": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "four": ZodBoolean {
    "_def": Object {
      "typeName": "ZodBoolean",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "one": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "six": ZodNumber {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodNumber",
    },
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "three": ZodNull {
    "_def": Object {
      "typeName": "ZodNull",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodNumber {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodNumber",
    },
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`Helpers combineEndpointAndMiddlewareInputSchemas() Should merge mixed object schemas 1`] = `
Object {
  "five": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "four": ZodOptional {
    "_def": Object {
      "innerType": ZodBoolean {
        "_def": Object {
          "typeName": "ZodBoolean",
        },
        "array": [Function],
        "default": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "one": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "three": ZodOptional {
    "_def": Object {
      "innerType": ZodNull {
        "_def": Object {
          "typeName": "ZodNull",
        },
        "array": [Function],
        "default": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodNumber {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodNumber",
    },
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`Helpers combineEndpointAndMiddlewareInputSchemas() Should merge union object schemas 1`] = `
Object {
  "five": ZodOptional {
    "_def": Object {
      "innerType": ZodString {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "array": [Function],
        "default": [Function],
        "email": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "regex": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "url": [Function],
        "uuid": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "four": ZodOptional {
    "_def": Object {
      "innerType": ZodBoolean {
        "_def": Object {
          "typeName": "ZodBoolean",
        },
        "array": [Function],
        "default": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "one": ZodOptional {
    "_def": Object {
      "innerType": ZodString {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "array": [Function],
        "default": [Function],
        "email": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "regex": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "url": [Function],
        "uuid": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "six": ZodOptional {
    "_def": Object {
      "innerType": ZodNumber {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodNumber",
        },
        "array": [Function],
        "default": [Function],
        "int": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "negative": [Function],
        "nonnegative": [Function],
        "nonpositive": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "positive": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "three": ZodOptional {
    "_def": Object {
      "innerType": ZodNull {
        "_def": Object {
          "typeName": "ZodNull",
        },
        "array": [Function],
        "default": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodOptional {
    "_def": Object {
      "innerType": ZodNumber {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodNumber",
        },
        "array": [Function],
        "default": [Function],
        "int": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "negative": [Function],
        "nonnegative": [Function],
        "nonpositive": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "positive": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`Helpers extractObjectSchema() should pass the object schema through 1`] = `
Object {
  "one": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
}
`;

exports[`Helpers extractObjectSchema() should return object schema for the intersection of object schemas 1`] = `
Object {
  "one": ZodString {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodString",
    },
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "two": ZodNumber {
    "_def": Object {
      "checks": Array [],
      "typeName": "ZodNumber",
    },
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`Helpers extractObjectSchema() should return object schema for the union of object schemas 1`] = `
Object {
  "one": ZodOptional {
    "_def": Object {
      "innerType": ZodString {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "array": [Function],
        "default": [Function],
        "email": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "refine": [Function],
        "refinement": [Function],
        "regex": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "url": [Function],
        "uuid": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodOptional {
    "_def": Object {
      "innerType": ZodNumber {
        "_def": Object {
          "checks": Array [],
          "typeName": "ZodNumber",
        },
        "array": [Function],
        "default": [Function],
        "int": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "max": [Function],
        "min": [Function],
        "negative": [Function],
        "nonnegative": [Function],
        "nonpositive": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "positive": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;
