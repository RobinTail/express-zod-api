// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Helpers combineEndpointAndMiddlewareInputSchemas() Should merge input schemas 1`] = `
Object {
  "four": ZodBoolean {
    "_def": Object {},
    "_parseInternalOptionalParams": [Function],
    "_parseWithInvalidFallback": [Function],
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "one": ZodString {
    "_def": Object {
      "isEmail": false,
      "isURL": false,
      "isUUID": false,
      "maxLength": null,
      "minLength": null,
    },
    "_parseInternalOptionalParams": [Function],
    "_parseWithInvalidFallback": [Function],
    "_regex": [Function],
    "array": [Function],
    "default": [Function],
    "email": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "nonempty": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "regex": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
    "url": [Function],
    "uuid": [Function],
  },
  "three": ZodNull {
    "_def": Object {},
    "_parseInternalOptionalParams": [Function],
    "_parseWithInvalidFallback": [Function],
    "array": [Function],
    "default": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "two": ZodNumber {
    "_def": Object {
      "isInteger": false,
      "maximum": null,
      "minimum": null,
    },
    "_parseInternalOptionalParams": [Function],
    "_parseWithInvalidFallback": [Function],
    "array": [Function],
    "default": [Function],
    "int": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "max": [Function],
    "min": [Function],
    "negative": [Function],
    "nonnegative": [Function],
    "nonpositive": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "positive": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;
