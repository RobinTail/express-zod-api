// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Common Helpers defaultInputSources should be declared in a certain way 1`] = `
{
  "delete": [
    "body",
    "query",
    "params",
  ],
  "get": [
    "query",
    "params",
  ],
  "patch": [
    "body",
    "params",
  ],
  "post": [
    "body",
    "params",
    "files",
  ],
  "put": [
    "body",
    "params",
  ],
}
`;

exports[`Common Helpers getFinalEndpointInputSchema() Should handle no middlewares 1`] = `
{
  "_type": "ZodObject",
  "shape": {
    "four": {
      "_type": "ZodBoolean",
    },
  },
}
`;

exports[`Common Helpers getFinalEndpointInputSchema() Should merge input object schemas 1`] = `
{
  "_type": "ZodIntersection",
  "left": {
    "_type": "ZodIntersection",
    "left": {
      "_type": "ZodIntersection",
      "left": {
        "_type": "ZodObject",
        "shape": {
          "one": {
            "_type": "ZodString",
          },
        },
      },
      "right": {
        "_type": "ZodObject",
        "shape": {
          "two": {
            "_type": "ZodNumber",
          },
        },
      },
    },
    "right": {
      "_type": "ZodObject",
      "shape": {
        "three": {
          "_type": "ZodNull",
        },
      },
    },
  },
  "right": {
    "_type": "ZodObject",
    "shape": {
      "four": {
        "_type": "ZodBoolean",
      },
    },
  },
}
`;

exports[`Common Helpers getFinalEndpointInputSchema() Should merge intersection object schemas 1`] = `
{
  "_type": "ZodIntersection",
  "left": {
    "_type": "ZodIntersection",
    "left": {
      "_type": "ZodIntersection",
      "left": {
        "_type": "ZodObject",
        "shape": {
          "one": {
            "_type": "ZodString",
          },
        },
      },
      "right": {
        "_type": "ZodObject",
        "shape": {
          "two": {
            "_type": "ZodNumber",
          },
        },
      },
    },
    "right": {
      "_type": "ZodIntersection",
      "left": {
        "_type": "ZodObject",
        "shape": {
          "three": {
            "_type": "ZodNull",
          },
        },
      },
      "right": {
        "_type": "ZodObject",
        "shape": {
          "four": {
            "_type": "ZodBoolean",
          },
        },
      },
    },
  },
  "right": {
    "_type": "ZodIntersection",
    "left": {
      "_type": "ZodObject",
      "shape": {
        "five": {
          "_type": "ZodString",
        },
      },
    },
    "right": {
      "_type": "ZodObject",
      "shape": {
        "six": {
          "_type": "ZodNumber",
        },
      },
    },
  },
}
`;

exports[`Common Helpers getFinalEndpointInputSchema() Should merge mixed object schemas 1`] = `
{
  "_type": "ZodIntersection",
  "left": {
    "_type": "ZodIntersection",
    "left": {
      "_type": "ZodIntersection",
      "left": {
        "_type": "ZodObject",
        "shape": {
          "one": {
            "_type": "ZodString",
          },
        },
      },
      "right": {
        "_type": "ZodObject",
        "shape": {
          "two": {
            "_type": "ZodNumber",
          },
        },
      },
    },
    "right": {
      "_type": "ZodUnion",
      "options": [
        {
          "_type": "ZodObject",
          "shape": {
            "three": {
              "_type": "ZodNull",
            },
          },
        },
        {
          "_type": "ZodObject",
          "shape": {
            "four": {
              "_type": "ZodBoolean",
            },
          },
        },
      ],
    },
  },
  "right": {
    "_type": "ZodObject",
    "shape": {
      "five": {
        "_type": "ZodString",
      },
    },
  },
}
`;

exports[`Common Helpers getFinalEndpointInputSchema() Should merge union object schemas 1`] = `
{
  "_type": "ZodIntersection",
  "left": {
    "_type": "ZodIntersection",
    "left": {
      "_type": "ZodUnion",
      "options": [
        {
          "_type": "ZodObject",
          "shape": {
            "one": {
              "_type": "ZodString",
            },
          },
        },
        {
          "_type": "ZodObject",
          "shape": {
            "two": {
              "_type": "ZodNumber",
            },
          },
        },
      ],
    },
    "right": {
      "_type": "ZodUnion",
      "options": [
        {
          "_type": "ZodObject",
          "shape": {
            "three": {
              "_type": "ZodNull",
            },
          },
        },
        {
          "_type": "ZodObject",
          "shape": {
            "four": {
              "_type": "ZodBoolean",
            },
          },
        },
      ],
    },
  },
  "right": {
    "_type": "ZodUnion",
    "options": [
      {
        "_type": "ZodObject",
        "shape": {
          "five": {
            "_type": "ZodString",
          },
        },
      },
      {
        "_type": "ZodObject",
        "shape": {
          "six": {
            "_type": "ZodNumber",
          },
        },
      },
    ],
  },
}
`;

exports[`Common Helpers getMessageFromError() should compile a string from ZodError 1`] = `"user/id: expected number, got string; user/name: expected string, got number"`;

exports[`Common Helpers getMessageFromError() should handle empty path in ZodIssue 1`] = `"Top level refinement issue"`;

exports[`Common Helpers getMessageFromError() should pass message from other error types 1`] = `"something went wrong"`;

exports[`Common Helpers getMessageFromError() should pass message from other error types 2`] = `"something went wrong"`;
