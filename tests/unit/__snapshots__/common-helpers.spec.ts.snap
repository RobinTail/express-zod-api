// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Common Helpers combineEndpointAndMiddlewareInputSchemas() Should merge input object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "four": Object {
      "_type": "ZodBoolean",
    },
    "one": Object {
      "_type": "ZodString",
    },
    "three": Object {
      "_type": "ZodNull",
    },
    "two": Object {
      "_type": "ZodNumber",
    },
  },
}
`;

exports[`Common Helpers combineEndpointAndMiddlewareInputSchemas() Should merge intersection object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "five": Object {
      "_type": "ZodString",
    },
    "four": Object {
      "_type": "ZodBoolean",
    },
    "one": Object {
      "_type": "ZodString",
    },
    "six": Object {
      "_type": "ZodNumber",
    },
    "three": Object {
      "_type": "ZodNull",
    },
    "two": Object {
      "_type": "ZodNumber",
    },
  },
}
`;

exports[`Common Helpers combineEndpointAndMiddlewareInputSchemas() Should merge mixed object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "five": Object {
      "_type": "ZodString",
    },
    "four": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodBoolean",
      },
    },
    "one": Object {
      "_type": "ZodString",
    },
    "three": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodNull",
      },
    },
    "two": Object {
      "_type": "ZodNumber",
    },
  },
}
`;

exports[`Common Helpers combineEndpointAndMiddlewareInputSchemas() Should merge union object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "five": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodString",
      },
    },
    "four": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodBoolean",
      },
    },
    "one": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodString",
      },
    },
    "six": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodNumber",
      },
    },
    "three": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodNull",
      },
    },
    "two": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodNumber",
      },
    },
  },
}
`;

exports[`Common Helpers defaultInputSources should be declared in a certain way 1`] = `
Object {
  "delete": Array [
    "body",
    "query",
    "params",
  ],
  "get": Array [
    "query",
    "params",
  ],
  "patch": Array [
    "body",
    "params",
  ],
  "post": Array [
    "body",
    "params",
    "files",
  ],
  "put": Array [
    "body",
    "params",
  ],
}
`;

exports[`Common Helpers extractObjectSchema() should pass the object schema through 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "one": Object {
      "_type": "ZodString",
    },
  },
}
`;

exports[`Common Helpers extractObjectSchema() should return object schema for the intersection of object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "one": Object {
      "_type": "ZodString",
    },
    "two": Object {
      "_type": "ZodNumber",
    },
  },
}
`;

exports[`Common Helpers extractObjectSchema() should return object schema for the union of object schemas 1`] = `
Object {
  "_type": "ZodObject",
  "shape": Object {
    "one": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodString",
      },
    },
    "two": Object {
      "_type": "ZodOptional",
      "value": Object {
        "_type": "ZodNumber",
      },
    },
  },
}
`;

exports[`Common Helpers getMessageFromError() should compile a string from ZodError 1`] = `"user/id: expected number, got string; user/name: expected string, got number"`;

exports[`Common Helpers getMessageFromError() should pass message from other error types 1`] = `"something went wrong"`;

exports[`Common Helpers getMessageFromError() should pass message from other error types 2`] = `"something went wrong"`;
