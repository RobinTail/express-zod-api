// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Positive Should compress the response in case it is supported by client 1`] = `
{
  "data": {
    "anything": 300,
    "doubleKey": "123123",
    "method": "get",
    "permissions": [
      "any",
    ],
    "userId": 354,
  },
  "status": "success",
}
`;

exports[`App Protocol Should fail on invalid method 1`] = `
{
  "error": {
    "message": "Can not PUT /v1/test",
  },
  "status": "error",
}
`;

exports[`App Protocol Should fail on malformed body 1`] = `
{
  "error": {
    "message": StringMatching /\\(Unexpected end of JSON input\\|Unterminated string in JSON at position 25\\)/,
  },
  "status": "error",
}
`;

exports[`App Protocol Should fail when missing content type header 1`] = `
{
  "error": {
    "message": "key: Required",
  },
  "status": "error",
}
`;

exports[`App Validation Problem 787: Should NOT treat ZodError thrown from within the handler as IOSchema validation error 1`] = `
{
  "error": {
    "message": "Expected number, received string",
  },
  "status": "error",
}
`;

exports[`App Validation Should fail on handler input type mismatch 1`] = `
{
  "error": {
    "message": "something: Expected string, received number",
  },
  "status": "error",
}
`;

exports[`App Validation Should fail on handler output type mismatch 1`] = `
{
  "error": {
    "message": "output/anything: Number must be greater than 0",
  },
  "status": "error",
}
`;

exports[`App Validation Should fail on middleware input type mismatch 1`] = `
{
  "error": {
    "message": "key: Expected string, received number",
  },
  "status": "error",
}
`;

exports[`App Validation Should fail on middleware refinement mismatch 1`] = `
{
  "error": {
    "message": "key: Invalid key",
  },
  "status": "error",
}
`;
